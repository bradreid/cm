:javascript
  var min_height = 100.00;
  var min_padding = 100.00;


  function cal_min_height(i, element){
    e = $(element);
    height = e.height();
    //console.log(height);
    if (height < min_height){
      min_height = height;
      min_padding = parseInt(e.css("padding-top"), 10) + parseInt(e.css("padding-bottom"), 10)+ parseInt(e.css("margin-top"), 10) + parseInt(e.css("margin-bottom"), 10)
    }
  }
  
  function set_height(i, element){
    height = $(element).height();
    interval = Math.ceil((height - (height * 0.1)) / min_height);
    new_height = interval * min_height + ((interval - 1) * min_padding) + interval + (1 * interval -1) ;
    //$(element).html(height + ' ' + new_height + ' ' + min_padding + ' ' + interval + (1 * interval -1));
    if (interval > 1){
     $(element).height(new_height); 
    } else{
      $(element).height(min_height);     
    }
  }  
  
  function show_bottom_borders(){
    diff =  $('#left_length').height() - $('#right_length').height();
    if (diff > 1){
      $('.rightbottom').removeClass('nobottom');
    } else if (diff < -1){
      $('.leftbottom').removeClass('nobottom');
    }
  }
  
  $(function(){
    jQuery.each( $('.min_height'), cal_min_height );
    jQuery.each( $('.min_height'), set_height );
    show_bottom_borders();
  })

.page-header
  %h1
    = "#{@tool.name}"
    %small                                                     
      =rating_stars(@tool)
      .btn-group.pull-right
        %table
          %tr
            %td
              =link_to( t(:download,:scope=>[:tic]), tool_downloadtic_path(@tool), :class => 'btn btn-success') if @tool.source_document_file_name
            %td
              &nbsp;
            %td
              =link_to(image_tag('tools_review.png', :height => 35, :alt => t(:review,:scope=>[:tic])), new_tool_review_path(@tool), :title => t(:review,:scope=>[:tic]))

        -if self.controller.is_a? AdminController
          = link_to admin_index_path, :class => 'btn' do
            %i.icon-arrow-left
            =t :back_admin, :scope=>[:nav_buttons]
          = link_to admin_tools_path, :class => 'btn' do
            %i.icon-arrow-left
            =t :back_tools, :scope=>[:nav_buttons]
  
%br
=render :partial => 'shared/like_tic'
%br
%table.tic{:width => '100%', :style => 'background-color:#F9F9DD'}
  %tr
    %td.bold.big
      =t :heading_desc, :scope=>[:tic]
  %tr
    %td.nobottom
      %br
      =@tool.description
      %br
      %br
%table.ticborder{:cellpadding => 0, :cellspacing => 0, :width => '100%', :style => 'background-color:#F9F9DD'}
  %tr
    %td{:width => '40%', :valign => 'top'}
      %table#left_length.tic{:width => '100%', :cellpadding => 0, :cellspacing => 0, :style => 'background-color:#B8CCE4'}
        %tr
          %td.notop.big.bold.noleft=t(:heading_when, :scope=>[:tic])
          %td.notop.big.noright.bold=t(:heading_why, :scope=>[:tic])
          %td.notop.noleft.noright{:width => '25%'}
        -FormConstants.when.sort.each do |w|
          -size = FormConstants.send("#{w}_purpose".downcase).size
          %tr
            %td.notop.noleft{:rowspan => size}
              =t( w[0..5].downcase.to_sym, :scope=>[:formconstants, :when] )
            %td.notop.noright.min_height
              -purp = FormConstants.send("#{w}_purpose".downcase).sort.first 
              =t( purp[0..4].downcase.to_sym, :scope=>[:formconstants, :when, w.downcase[0..2].to_sym] )
            %td.noleft.notop.noright{:align => 'center'}
              =image_tag 'check_mark.png', :height => 25 if @tool.why == FormConstants.send("#{w}_purpose".downcase).sort.first
          -(1..(size - 1)).each do |i|
            %tr
              %td.noright.min_height
                - opurp = FormConstants.send("#{w}_purpose".downcase).sort[i] 
                =t( opurp[0..4].downcase.to_sym, :scope=>[:formconstants, :when, w.downcase[0..2].to_sym] )
              %td.noleft.noright{:align => 'center'}
                =image_tag 'check_mark.png', :height => 25 if @tool.why == FormConstants.send("#{w}_purpose".downcase).sort[i]
    %td{:valign => 'top', :width => '50%'}
      %table#right_length.tic{:width => '100%', :style => 'background-color:#D6E3BC'}
        %tr
          %td.notop.noleft.noright.big.bold{:width => '40%'}=t(:when_topic, :scope=>[:tic])
          %td.notop.noleft.min_height.noright
            -tt = @tool.topic 
            =t( tt.downcase[0..2].to_sym, :scope=>[:formconstants,:topic])
        %tr
          %td.notop.noleft.noright.big.bold{:width => '40%'}=t(:heading_details, :scope=>[:tic])
          %td.notop.noleft.min_height.noright
        %tr
          %td.noleft.noright.equipment
            =t :equipneeds, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.special_equipment_facilities
        %tr
          %td.noleft.noright
            =t :expneeds, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.expertise_needed  
        %tr
          %td.noleft.noright
            =t :lang, :scope=>[:tic]
          %td.noleft.min_height.noright
            -tl = @tool.language
            =t( tl.downcase[0..1].to_sym, :scope=>[:formconstants,:language])
        %tr
          %td.noleft.noright
            =t :authors, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.author
        %tr
          %td.noleft.noright
            =t :editors, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.editor
        %tr
          %td.noleft.noright
            =t :madein, :scope=>[:tic]
          %td.noleft.min_height.noright 
            =@tool.where_created            
        %tr
          %td.noleft.noright
            =t :pub, :scope=>[:tic]
          %td.noleft.min_height.noright    
            =@tool.publisher
        %tr
          %td.noleft.noright
            =t :datecreated, :scope=>[:tic]
          %td.noleft.min_height.noright 
            ="#{Date::MONTHNAMES[@tool.date_created.try(:month)]} #{@tool.date_created.try(:year)}"           
        %tr
          %td.noleft.noright
            =t :filesize, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.source_document_file_size            
        %tr
          %td.noleft.noright
            =t :fileformat, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.source_document_content_type
        %tr
          %td.noleft.noright
            =t :sourcetitle, :scope=>[:tic]
          %td.noleft.min_height.noright
            =@tool.source_document_name           
        %tr
          %td.noleft.noright.nobottom.rightbottom
            =t :sourceurl, :scope=>[:tic]
          %td.noleft.min_height.noright.nobottom.rightbottom
            =link_to(@tool.source_url, @tool.source_url) if @tool.source_url
            
%br
%br
.clear_both
%h2
  =t :rev_list, :scope=>[:viewuser]
- if current_user.try(:is_admin?)
  -reviews = @tool.reviews
-else
  -reviews = @tool.reviews.active_by_user(current_user)
-if !reviews.any?
  =t :norevs, :scope=>[:tic]
-else
  %table.table
    %tr
      -if current_user.try(:is_admin?) || @tool.reviews.inactive_by_user(current_user).any?
        %th
          =t :heading_active, :scope=>[:viewuser]
      %th
        =t :heading_rating, :scope=>[:viewuser]
      %th
        =t :heading_reviewer, :scope=>[:viewuser]
      %th
        =t :heading_date, :scope=>[:viewuser]
      %th
        =t :heading_actions, :scope=>[:viewuser]
    -reviews.each do |r|
      %tr
        - if current_user.try(:is_admin?) || @tool.reviews.inactive_by_user(current_user).any?
          %td
            =status_image(r.active?)
        %td
          =review_stars(r)
        %th
          = r.user ? link_to(r.user.display_name, user_path(r.user)) : r.full_name
        %td
          =r.created_at.strftime("%A, %B %d, %Y, %l:%M%p")
        %td
          %span{:style => 'white-space:nowrap'}
            =view_link tool_review_path(@tool, r) 
            -if current_user.try(:is_admin?) || (current_user && r.user == current_user)
              
              =edit_link [@tool, r]
              
              =delete_link toggle_active_tool_review_path(r.tool, r), :confirm => t(:rusure,:scope=>[:links]) + ' ' + (r.active? ? t(:revdel_confirm,:scope=>[:links]) : t(:revadd_confirm,:scope=>[:links])), :title => (r.active? ? t(:alt_deact,:scope=>[:links]) : t(:alt_act,:scope=>[:links])), :alt_text => (r.active? ? t(:alt_deact,:scope=>[:links]) : t(:alt_act,:scope=>[:links])), :method => :get, :img_link => (r.active? ? nil : 'link_icons/tick.png')

%br
.clear_both         
