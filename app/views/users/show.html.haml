.page-header
  %h1
    =@user.display_name
    %small
      .btn-group.pull-right
        -if self.controller.is_a? AdminController
          = link_to admin_index_path, :class => 'btn' do
            %i.icon-arrow-left
            Back to admin      
          = link_to admin_users_path, :class => 'btn' do
            %i.icon-arrow-left
            Back to users

%table
  - @user.display_fields.each do |a|
    -if !@user.send(a[0]).blank?
      %tr
        %td
          %p
            =a[1]
        %td{:width => 10}
        %td
          =simple_format @user.send(a[0])
      
.clear_both
%br
%br
%h3
  =t :rev_list, :scope=>[:viewuser]
-if !@user.reviews.any?
  =t :rev_none, :scope=>[:viewuser]
-else
  %table.data
    %tr
      - if current_user.try(:is_admin?) || @user.reviews.inactive_by_user(current_user).any?
        %th
          =t :heading_active, :scope=>[:viewuser]
      %th
        =t :heading_rating, :scope=>[:viewuser]
      %th
        =t :heading_tool, :scope=>[:viewuser]
      %th
        =t :heading_date, :scope=>[:viewuser]
      %th
        =t :heading_actions, :scope=>[:viewuser]
    -if current_user.try(:is_admin?) || @user == current_user
      -reviews = @user.reviews
    -else
      -reviews = @user.reviews.active
    -reviews.each do |r|
      %tr
        -if current_user.try(:is_admin?) || @user.reviews.inactive_by_user(current_user).any?
          %td
            =status_image(r.active?)
        %td
          =review_stars(r)
        %th
          = link_to r.tool.name, tool_path(r.tool)
          = rating_stars(r.tool)
        %td
          =r.created_at.strftime("%A, %B %d, %Y at %l:%M%p")
        %td
          %span{:style => 'white-space:nowrap'}
            =view_link tool_review_path(r.tool, r) 
            -if current_user.try(:is_admin?) || r.user == current_user
              |
              = edit_link [r.tool, r]
              |
              =delete_link toggle_active_tool_review_path(r.tool, r), :confirm => t(:rusure,:scope=>[:links]) + ' ' + (r.active? ? t(:revdel_confirm,:scope=>[:links]) : t(:revadd_confirm,:scope=>[:links])), :title => (r.active? ? t(:alt_deact,:scope=>[:links]) : t(:alt_act,:scope=>[:links])), :alt_text => (r.active? ? t(:alt_deact,:scope=>[:links]) : t(:alt_act,:scope=>[:links])), :method => :get, :img_link => (r.active? ? nil : 'link_icons/tick.png')
